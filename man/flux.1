\" Flux man page
.if !\n(.g \{\
.   if !\w|\*(lq| \{\
.       ds lq ``
.       if \w'\(lq' .ds lq "\(lq
.   \}
.   if !\w|\*(rq| \{\
.       ds rq ''
.       if \w'\(rq' .ds rq "\(rq
.   \}
.\}
.de Id
.ds Dt \\$4
..
.Id $Id: flux.1,v 1.00 2013/01/22 13:09:30 lester Exp $
.TH FLUX 1 \*(Dt "Lester Hedges"
.SH NAME
flux \- converge towards a target image using a Monte Carlo algorithm.
.SH SYNOPSIS
.B flux
.RI [ IMAGE ]
.br
.B flux
.RI [ IMAGE ]
.RI [ options ]
.SH DESCRIPTION
.PP
.B Flux
is a command-line tool that uses a Monte Carlo (MC) algorithm to converge
towards a target image using a random sequence of nearest neighbor pixel swaps.
Images produced by
.B flux
resemble iron filings manipulated by a magnetic field.
.PP
.B Flux
works by repeatedly attempting to swap the RGBA (red, green, blue, alphpa)
values of two adjacent pixels. The algorithm computes the difference in the
magnitude of the two RGBA pixel vectors compared to the same vector in the
target image before and after the trial move and accepts the move according
to a Boltzmann factor. The system is coupled to a thermal bath which allows
the user to control the probability of accepting moves that take the image
away from the target, thus allowing the rate of convergence to be tuned.
.PP
.B Flux
avoids unneccessary dependency on
.B zlib
and
.B libpng
by using
.B LodePNG
to decode and encode
.B PNG
images.
.B MersenneTwister
is used to provide high quality and efficient random numbers.
.PP
.B Flux
must be passed at least one command-line argument, the path of a
.B PNG .
.B Flux
creates an initial canvas by randomizing the pixels of the target
image. As the algorithm progresses
.B flux
will output a sequence of images showing the evolution of the the canvas.
In addition, the current acceptance rate is printed to
.B stdout
allowing the user to monitor the rate of convergence.
.PP
.B Flux
is trivially parellelizable,
.B MPI
support will follow (allowing efficient processing of very large images).
.SH OPTIONS
.B
flux
supports the following short- and long-form command-line options. Invoking
.B flux
with no options will print a help message.
.TP
.BR \-h ", " \-\^\-help
Print the help message.
.TP
.BI \-i " INT" "\fR,\fP \-\^\-iterations "INT
Where
.I INT
is an integer specifying the number of iterations. Iterations are measured in
units of Monte Carlo sweeps, where one sweep equals, on average, one trial move
per pixel, i.e. there are width x height iterations per sweep.
.TP
.BI \-f " INT" "\fR,\fP \-\^\-frames "INT
Where
.I INT
is an integer specifying the number of frames to be saved.
.TP
.BI \-t " DOUBLE" "\fR,\fP \-\^\-temperature "DOUBLE
Specify the temperature of the thermal bath. A higher temperature will mean
that more trial moves are accepted. At zero temperature, only moves that take
the canvas closer to the target will be accepted (comparable to a hill
climbing algorithm). Temperature adds noise to the system and can be used
to tune the rate of convergence as well as the style of image produced.
.TP
.BR \-l ", " \-\^\-log
Use logarithmic spacing for sampling points. This is useful when convergence
is very slow.
.BR \-r ", " \-\^\-reverse
Run
.B flux
in reverse mode. Start from the target image and evolve to a disorded state.
.TP
.BI \-d " DIRECTORY" "\fR,\fP \-\^\-directory "DIRECTORY
Specify a directory for the output files.
.I DIRECTORY
should be in the working directory and will be created if it doesn't already
exist.
.TP
.BR \-m ", " \-\^\-monitor
Turn on acceptance monitoring. If set,
.B flux
will monitor statistics for the acceptance rate and write data to
.BR log.txt
.SH DEFAULTS
.PP
.B sweeps
10000
.PP
.B frames
1000
.PP
.B temperature
0.1
.PP
.B logarithmic
off
.PP
.B reverse
off
.PP
.B monitor
off
.SH SEE ALSO
.BR rectify (1)
.SH CREDITS
.PP
.BR LodePNG ,
.BR http://lodev.org/lodepng .
.PP
.BR MersenneTwister ,
.BR www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html .
.SH BUGS
.PP
Email bugs, comments, and artwork to
.BR lester.hedges+flux@gmail.com .
